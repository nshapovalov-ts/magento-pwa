.root {
    border: 1px solid rgb(var(--venia-global-color-gray-200));
    border-radius: 12px;
    font-size: 14px;
    color: rgb(var(--venia-global-color-black));
    display: grid;
    margin: 5px 10px 5px 0;
    position: relative;
    white-space: nowrap;
}

.rootActive {
    composes: root;
    border: 1px solid rgb(var(--venia-global-color-orange));
}

.trigger {
    padding: 5px 10px;
}

@screen md {
    .trigger {
        padding: 10px 20px;
    }
}

.topRow {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header {
    align-items: center;
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: 1fr auto;
    column-gap: 0.5rem;
}

.name {
    height: 1.5rem;
    line-height: 1.5rem;
    text-align: left;
}

.list {
    display: flex;
    flex-direction: column;
    background: #fff;
    height: auto;
    padding: 22px 22px 0 22px;
    z-index: 5;
    left: calc(50% - 150px);
    white-space: pre-wrap;
}

@screen xl {
    .list {
        position: absolute;
        display: flex;
        left: 0;
        top: 66px;
        box-shadow: 0px 16px 64px -12px rgb(0 0 0 / 20%);
        border-radius: 12px;
        background: #fff;
        width: 400px;
        z-index: 5;
        margin-top: 0;
    }
}

.list:empty {
    display: none;
}

.filterName {
    font-size: var(--venia-global-fontSize-200);
    font-weight: var(--venia-global-fontWeight-bold);
}

.search {
    margin: 10px 0;
}

.clearButton {
    composes: text from 'components/Button/button.module.css';
    padding: 0;
    color: rgb(var(--venia-global-color-orange));
}

.applyButton {
    text-align: right;
    margin-top: 10px;
}

.modalRoot {
    /* The root aside element takes up the whole screen. */
    position: fixed;
    left: -100vw;
    top: 0;
    height: 100%;
    width: 100%;

    /* It is hidden by default. */
    opacity: 0;
    visibility: hidden;

    transform: translate3d(-50%, 0, 0);
    /* It animates to being closed, and then moves off screen. */
    transition: none;

    /* It sits over all background content. */
    z-index: 3;
}

.modalRoot_open {
    composes: modalRoot;
    left: 50%;
    opacity: 1;
    visibility: visible;

    /* It animates to being open. */
    transition: none;
}

.modalDialog {
    background-color: rgb(var(--venia-global-color-background));
    border-radius: 5px;
    box-shadow: 1px 1px 5px rgb(var(--venia-global-color-gray-darker));

    /* It sets maximum sizes so its body can handle overflow. */
    height: 600px;
    max-height: 90vh;
    /* Minimum keeps a 16:9 aspect ratio and is 40rem x 22.5rem.  */
    min-height: 600px;
    width: 640px;

    /* Nothing is allowed to overflow container itself. */
    overflow: hidden;

    /* Container is itself a grid container for its children. */
    display: grid;
    grid-template-rows: auto 1fr;

    /* Container can be the target of pointer events. */
    pointer-events: auto;

    /* It sits on top of the mask. */
    z-index: 4;
}

.modalForm {
    /* The form fills the entire aside. */
    height: 100%;
    width: 100%;

    /* Its contents are centered horizontally and vertically. */
    display: grid;
    justify-content: center;
    align-content: center;
}

@media (max-width: 960px) {
    .modalRoot {
        composes: modalRoot;
    }

    .modalRoot_open {
        composes: modalRoot_open;
    }

    .modalForm {
        height: 100%;
        width: 100%;

        /* Its contents are centered horizontally and vertically. */
        display: grid;
        justify-content: center;
        align-content: center;
    }

    .modalDialog {
        min-height: 100vh;
        width: 100vw;
    }
}

.modalContent {
    padding: 1rem;
    position: relative;
}

.modalButtons {
    padding: 0 1rem 1rem 1rem;

    display: grid;
    grid-auto-flow: column;
    gap: 1rem;
    justify-content: center;
}
